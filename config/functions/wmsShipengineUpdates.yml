function:
  name: omni-wms-shipengine-updates-${self:provider.stage}
  handler: src/ShipEngineIntegration/index.handler
  runtime: nodejs16.x 
  timeout: 120
  layers:
    - { Ref: WmsShipengineLibsLambdaLayer }
  environment:
    WMS_ADAPTER_ENDPOINT: ${ssm:/omni-dw/${self:provider.stage}/wms/adapter/url}
    WMS_ADAPTER_USERNAME: ${ssm:/omni-dw/${self:provider.stage}/wms/adapter/username}
    WMS_ADAPTER_PASSWORD: ${ssm:/omni-dw/${self:provider.stage}/wms/adapter/password}
    API_LOG_TABLE: !Ref ApiLogTable
    API_STATUS_TABLE: !Ref ApiStatusTable
    SHIPENGINE_API_KEY: ${ssm:/wms-shipengine/${self:provider.stage}/api/key}
    SHIPENGINE_API_ENDPOINT: ${ssm:/wms-shipengine/${self:provider.stage}/api/endpoint}
    ERROR_SNS_ARN: ${ssm:/omni-reports/${self:provider.stage}/error-notification/sns/arn}

  package:
    patterns:
      - "!**/*"
      - "src/ShipEngineIntegration/**"

  vpc:
    securityGroupIds:
      - ${ssm:/omni-dw/${self:provider.stage}/wms/asn/receipt/sgId}
    subnetIds:
      - ${ssm:/omni-dw/${self:provider.stage}/wms/asn/receipt/subnetA}

  events:
    - existingS3:
        bucket: ${ssm:/omni-dw/${self:provider.stage}/wms/bucket/name}
        events: 
          - s3:ObjectCreated:*
        rules:
          - prefix: ${ssm:/wms-shipengine/${self:provider.stage}/file/prefix}
          - suffix: ${ssm:/wms-shipengine/${self:provider.stage}/file/suffix}